name: Deploy with Docker and Terraform

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

     env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      ECR_REGISTRY: ${{ secrets.ECR_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

     # Step 1: Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker Image
      run: docker build -t my-app-image:1 .

    - name: Check images
      run: docker images -a

       # Step 3: Login to Amazon ECR
    - name: Login to Amazon ECR
      run: |
          aws ecr get-login-password --region $AWS_REGION \
          | docker login --username AWS --password-stdin $ECR_REGISTRY

      # Step 4: Build and tag Docker image
    - name: Build and tag Docker image
      run: |
          docker build -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY:1 $ECR_REGISTRY/$ECR_REPOSITORY:1

      # Step 5: Push Docker image to ECR
    - name: Push Docker image to ECR
      run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:1

    # - name: Run Docker Container
    #   run: docker run -d --name my-app-container my-app-image

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Terraform Init
      run: terraform init

    - name: Terraform validate
      run: terraform validate

    # - name: Terraform Apply
    #   run: terraform apply -auto-approve
