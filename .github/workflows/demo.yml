name: Deploy with Docker and Terraform

on:
  push:
    branches:
      - main
  workflow_dispatch:

#stage-1
jobs:
  aws-login:
    runs-on: ubuntu-latest
    
# Login to aws account
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      ECR_REGISTRY: ${{ secrets.ECR_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 1: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

#stage-2
  docker:
    runs-on: ubuntu-latest
    needs: aws-login

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # - name: Set up Docker Buildx
      #   uses: cd ../Dockerfile

      # Step 2: Build Docker Image
      - name: Build Docker Image
        run: docker build -t my-app-image:3 -f ../../Dockerfile .

      - name: Check Docker Images
        run: docker images -a

#stage-3
  ecr-image:
    runs-on: ubuntu-latest
    needs: docker

    steps:
      # Step 3: Login to Amazon ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION \
          | docker login --username AWS --password-stdin $ECR_REGISTRY

      # Step 4: Tag Docker image for ECR
      - name: Tag Docker image for ECR
        run: |
          docker tag my-app-image:3 $ECR_REGISTRY/$ECR_REPOSITORY:3

      # Step 5: Push Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:3

#stage-4
  terraform-code:
    runs-on: ubuntu-latest
    needs: ecr-image

    steps:
      # Step 6: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: terraform plan
        run: terraform plan -var-file zones.tfvars

      # Uncomment to apply changes automatically (CAUTION: applies infra changes)
      # - name: Terraform Apply
      #   run: terraform apply -auto-approve
